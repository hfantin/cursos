version: '3'

services: 

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      SERVER_PORT: 80
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    networks:
      - internal

  broker-service:
    build: 
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports: 
      - "8080:80"
    deploy: 
      mode: replicated
      replicas: 1
    environment:
      SERVER_PORT: 80
    networks:
      - internal


  logger-service:
    build: 
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy: 
      mode: replicated
      replicas: 1
    environment:
      SERVER_PORT: 80
    networks:
      - internal


  postgres:
    image: 'postgres:14.2'
    user: "999:999"
    ports:
      - "5432:5432"
    deploy:
        mode: replicated
        replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      # - ./db-data/postgres/:/var/lib/postgresql/data/
      # - ./db-data:/var/lib/postgresql/data
    networks:
      - internal

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo:/data/db
    networks:
      - internal

networks:
  internal:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "111.111.10.0/24"