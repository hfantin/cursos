
plugins {
	id "org.springframework.boot"  version "2.2.0.BUILD-SNAPSHOT"
	id "io.spring.dependency-management" version "1.0.8.RELEASE"
	id 'org.jetbrains.kotlin.jvm' version '1.3.50'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.50'
	id "com.palantir.docker" version "0.22.1"

}

group = "br.com.alura"
version = "0.0.4-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_1_8

springBoot {
	buildInfo()
}


repositories {
	mavenCentral()
	maven { url = uri("https://repo.spring.io/milestone") }
	maven { url = uri("https://repo.spring.io/snapshot") }
}


dependencies {
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-cache")
//	implementation("org.springframework.boot:spring-boot-starter-security")
//	implementation("de.codecentric:spring-boot-admin-starter-client:2.1.6")
//	implementation("io.springfox:springfox-swagger2:2.9.2")
//	implementation("io.springfox:springfox-swagger-ui:2.9.2")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
//	implementation("io.jsonwebtoken:jjwt:0.9.1")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("com.h2database:h2")
//	developmentOnly("org.springframework.boot:spring-boot-devtools")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
}


compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = JavaVersion.VERSION_1_8
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = JavaVersion.VERSION_1_8
	}
}

docker {
	dependsOn build
	name "${project.group}/${jar.archiveBaseName.get()}"
	files bootJar.archiveFile, "run.sh"
	buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}"])

}