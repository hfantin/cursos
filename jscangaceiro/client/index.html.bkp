<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>Negociações</title>
        <link rel="stylesheet" href="css/bootstrap.css">
        <link rel="stylesheet" href="css/bootstrap-theme.css">

    </head>
    <body class="container">

        <h1 class="text-center">Negociações</h1>

        <div id="mensagemView"></div>

        <form class="form">

            <div class="form-group">
                <label for="data">Data</label>
                <input type="text" id="data" class="form-control" required autofocus/>
            </div>

            <div class="form-group">
                <label for="quantidade">Quantidade</label>
                <input
                    type="number"
                    min="1"
                    step="1"
                    id="quantidade"
                    class="form-control"
                    value="1"
                    required/>
            </div>

            <div class="form-group">
                <label for="valor">Valor</label>
                <input
                    id="valor"
                    type="number"
                    class="form-control"
                    min="0.01"
                    step="0.01"
                    value="0.0"
                    required/>
            </div>

            <button class="btn btn-primary" type="submit">Incluir</button>
        </form>

        <div class="text-center">
            <button id="botao-importa" class="btn btn-primary text-center" type="button">
                Importar Negociações
            </button>
            <button id="botao-apaga" class="btn btn-primary text-center" type="button">
                Apagar
            </button>
        </div>
        <br>
        <br>

        <div id="negociacoes"></div> 

        <script src="node_modules/systemjs/dist/system.js"></script>
        <script>
            System
                .import('app/app.js')
                .catch(err => console.error(err));
       
            // Teste do proxy 
            const negociacao = new Proxy(new Negociacao(new Date(), 2, 10), 
            {
                /*
                    target - referencia para o objeto encapsulado pelo proxy(neste caso, negociacao)
                    prop - é uma string com o nome da propriedade que está sendo acessada
                    receiver - é uma referencia para o proprio proxy 
                */
            
               /*
                    quando o javascript chama um método, ele realiza um get para obter uma referencia e depois um apply pra passar os parametros.
                */
                // get: function(target, prop, receiver){ -- pode ser escrito dessa forma tb
                get(target, prop, receiver){
                    console.log(`a propriedade "${prop}" caiu na armadilha  - tipo=${typeof(target[prop])}`);
                    // nesse caso, retorna negociacoa.propriedade, por exemplo, negociacao.quantidade
                    return `${prop}=${target[prop]}`;
                }, 
                // set: function(target, prop, value, receiver){
                set(target, prop, value, receiver){

                    /*

                    //  se for um objeto congelado, será ignorado
                    target[prop] = value;
                    // o setter dever retornar true para indicar que a operacao foi bem sucedida
                    const resultado = target[prop] == value;
                    console.log(`"${prop}" guarda ${target[prop]}, recebera o valor ${value}...resultado=${resultado}`);
                    return resultado;

                    */
                   // usando  a Reflect API (https://developer.mozilla.org/en-US/docs/Web/Javascript/Reference/Global_Objects/Reflect)
                   // podemos simplificar o código.
                   // A função set recebe tres parametros: a instancia do objeto, o nome da propriedade e o novo valor
                   const resultado = Reflect.set(target, prop, value);

                   console.log(`"${prop}" guarda ${target[prop]}, recebera o valor ${value}...resultado=${resultado}`);

                   return resultado;
                }
            });

            // arguments é uma variavel implícita que dá acesso aos parametros, mesmo que eles não sejam explicitos
            function testeArguments(){
                console.log(`arguments=${JSON.stringify(arguments)}`);
            }
            // teste:
            testeArguments('hamilton', 'geraldo', 'fantin', 2);
            // console.log(negociacao.quantidade);
            // console.log(negociacao.valor);
            negociacao.valor = 50;
            console.log(`negociacao.${negociacao.valor}`);
        </script>

    </body>
</html>